const { MessageEmbed } = require("discord.js");
const { MessageActionRow, MessageButton, Interaction } = require('discord.js');
const { MessageMenuOption, MessageMenu } = require("discord.js");
const { Command } = require("../../utils/command/command");
const setting = require("../../settings/config.js");
const emoji = require("../../settings/config.js").emoji;
const econfig = require("../../settings/embed.js");
const db = require("../../database/quick_mongo.js");

const slash_Command = "/";

module.exports = new Command({
    name: "help",
    description: `‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ö‡∏≠‡∏ó‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î`,
    userPermissions: ["SEND_MESSAGES"],
    botPermissions: ["SEND_MESSAGES", "ATTACH_FILES", "EMBED_LINKS"],
    category: "info",
    cooldown: 10,
    options: [
        {
            name: "‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á",
            description: `[‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£]`,
            type: "STRING",
            required: true,
            choices: [
                {
                    name: "üìó | Info",
                    value: "information",
                },
                {
                    name: "üé∂ | Music",
                    value: "music",
                },
                {
                    name: "üé∂ | Music-Filters",
                    value: "music-filters",
                },
                {
                    name: "üé≠ | Meme & Gif",
                    value: "meme&gif",
                },
                {
                    name: "‚õî | NSFW",
                    value: "nsfw",
                },
                {
                    name: "‚öô | Setting & Setup",
                    value: "setting&setup",
                },
            ],
        },
    ],
    run: async ({ client, interaction, args, prefix }) => {
        const command_category = interaction.options.getString("‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á");
        const custom_Prefix = await db.get(`prefix_${client.user.id}_${interaction.guildId}`);


        const info_Command = new MessageEmbed()
            .setColor(setting.embed.color)
            .setFooter({
                text: setting.embed.footertext,
            })
            .setTimestamp()
        
        const music_Command = new MessageEmbed()
            .setColor(setting.embed.color)
            .setTitle('‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡πÄ‡∏û‡∏•‡∏á')
            .addField(`${setting.emoji.music}  |  **\` ${slash_Command}clearqueue \`**`,`‡∏•‡πâ‡∏≤‡∏á‡∏Ñ‡∏¥‡∏ß`, true)
            .addField(`${setting.emoji.music}  |  **\` ${slash_Command}connect \`**`,`‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ä‡πà‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á`, true)
            .addField(`${setting.emoji.music}  |  **\` ${slash_Command}loop \`**`,`‡∏ß‡∏ô‡∏ã‡πâ‡∏≥`, true)
            .addField(`${setting.emoji.music}  |  **\` ${slash_Command}music-setup \`**`,`‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ä‡πà‡∏≠‡∏á‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏û‡∏•‡∏á`, true)
            .addField(`${setting.emoji.music}  |  **\` ${slash_Command}music-remove \`**`,`‡∏•‡∏ö‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ä‡πà‡∏≠‡∏á‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏û‡∏•‡∏á`, true)
            .addField(`${setting.emoji.music}  |  **\` ${slash_Command}nowplaying \`**`,`‡πÄ‡∏û‡∏•‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏•‡πà‡∏ô‡∏≠‡∏¢‡∏π‡πà`, true)
            .addField(`${setting.emoji.music}  |  **\` ${slash_Command}pause \`**`,`‡∏´‡∏¢‡∏∏‡∏î‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß`, true)
            .addField(`${setting.emoji.music}  |  **\` ${slash_Command}resume \`**`,`‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏î‡πÄ‡∏û‡∏•‡∏á‡∏ï‡πà‡∏≠`, true)
            .addField(`${setting.emoji.music}  |  **\` ${slash_Command}play \`**`,`‡πÄ‡∏•‡πà‡∏ô`, true)
            .addField(`${setting.emoji.music}  |  **\` ${slash_Command}queue \`**`,`‡πÄ‡πÄ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ñ‡∏¥‡∏ß`, true)
            .addField(`${setting.emoji.music}  |  **\` ${slash_Command}shuffle \`**`,`‡∏™‡∏•‡∏±‡∏ö`, true)
            .addField(`${setting.emoji.music}  |  **\` ${slash_Command}skip \`**`,`‡∏Ç‡πâ‡∏≤‡∏°‡πÄ‡∏û‡∏•‡∏á‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô`, true)
            .addField(`${setting.emoji.music}  |  **\` ${slash_Command}stop \`**`,`‡∏´‡∏¢‡∏∏‡∏î`, true)
            .addField(`${setting.emoji.music}  |  **\` ${slash_Command}volume \`**`,`‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á`, true)
            .addField(`${setting.emoji.music}  |  **\` ${slash_Command}radio \`**`,`‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏û‡∏•‡∏á‡∏ß‡∏¥‡∏ó‡∏¢‡∏∏`, true)
            .setFooter({
                text: setting.embed.footertext,
            })
            .setTimestamp()
        
        const filters_Command = new MessageEmbed()
            .setColor(setting.embed.color)
            .addField(`${setting.emoji.music_filter}  |  **\` ${slash_Command}filter \`**`, `‡πÄ‡∏õ‡∏¥‡∏î / ‡∏õ‡∏¥‡∏î‡∏ü‡∏¥‡∏•‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÄ‡∏û‡∏•‡∏á`, false)
            .addField(`${setting.emoji.music_filter} ‡∏ü‡∏¥‡∏•‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î`,`\` Nightcore / Vaporwave / BassBoost / Pop / Soft / Treblebass /\n Eight Dimension / Karaoke / Vibrato / Tremolo \``, false)
            .addField(`${setting.emoji.reset} ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏ü‡∏¥‡∏•‡πÄ‡∏ï‡∏≠‡∏£‡πå`,`**\` ${slash_Command}filter Reset \`**`, false)
            .setFooter({
                text: setting.embed.footertext,
            })
            .setTimestamp()

        const meme_gif_Command = new MessageEmbed()
            .setColor(setting.embed.color)
            .setFooter({
                text: setting.embed.footertext,
            })
            .setTimestamp()

        const nsfw_Command = new MessageEmbed()
            .setColor(setting.embed.color)
            .setFooter({
                text: setting.embed.footertext,
            })
            .setTimestamp()

        const setting_setup_Command = new MessageEmbed()
            .setColor(setting.embed.color)
            .addField(`${setting.emoji.setting}  |  **\` ${slash_Command}config-prefix \`**`,`‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Prefix ‡∏ö‡∏≠‡∏ó`, true)
            .setFooter({
                text: setting.embed.footertext,
            })
            .setTimestamp()


        if(command_category === "information"){
            await interaction.followUp({
                embeds: [info_Command],
            });
        }
        else if(command_category === "music"){
            await interaction.followUp({
                embeds: [music_Command],
            });
        }
        else if(command_category === "music-filters"){
            await interaction.followUp({
                embeds: [filters_Command],
            });
        }
        else if(command_category === "meme&gif"){
            await interaction.followUp({
                embeds: [meme_gif_Command],
            });
        }
        else if(command_category === "nsfw"){
            await interaction.followUp({
                embeds: [nsfw_Command],
            });
        }
        else if(command_category === "setting&setup"){
            await interaction.followUp({
                embeds: [setting_setup_Command],
            });
        }
    },
});