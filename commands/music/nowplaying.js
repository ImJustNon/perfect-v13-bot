const { MessageEmbed } = require("discord.js");
const { Command } = require("../../utils/command/command");
const setting = require("../../settings/config.js");
const emoji = require("../../settings/config.js").emoji;
const econfig = require("../../settings/embed.js");
const manager = require("../../music/manager.js");
const ytdl = require('ytdl-core');
const { convertTime } = require("../../music/utils/convertTime.js");
const { progressbar } = require("../../music/utils/progressbar.js");

module.exports = new Command({
    name: "nowplaying",
    description: `‡πÄ‡πÄ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á‡πÄ‡∏û‡∏•‡∏á‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏•‡πà‡∏ô‡∏≠‡∏¢‡∏π‡πà ‡∏ì ‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ`,
    userPermissions: ['SEND_MESSAGES', 'READ_MESSAGES', 'CONNECT'],
    botPermissions: ['SEND_MESSAGES', 'READ_MESSAGES', 'CONNECT', 'ATTACH_FILES'],
    category: "music",
    cooldown: 10,
    run: async ({ client, interaction, args, prefix }) =>{
        const guild = client.guilds.cache.get(interaction.guildId)
        const member = guild.members.cache.get(interaction.member.user.id);
        const channel = member.voice.channel;

        const me = guild.members.cache.get(client.user.id);

        let player = manager.players.get(interaction.guildId);

        if(!channel) return interaction.followUp('‚ö† | ‡πÇ‡∏õ‡∏£‡∏î‡πÄ‡∏Ç‡πâ‡∏≤‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏Å‡πà‡∏≠‡∏ô‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡πà‡∏∞');
        else if(me.voice.channel && !channel.equals(me.voice.channel)) return interaction.followUp('‚ö† | ‡∏î‡∏π‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏ß‡πà‡∏≤‡∏Ñ‡∏∏‡∏ì‡∏à‡∏∞‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡∏π‡πà‡∏ä‡πà‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô‡∏ô‡πà‡∏∞');
        else if(!player || !player.queue.current) return interaction.followUp('‚ö† | ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏û‡∏•‡∏á ‡∏ì ‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡πÄ‡∏•‡∏¢‡∏ô‡πà‡∏∞');
        else{
            let Repeat = '‚ùå';
            if(player.queueRepeat || player.trackRepeat){
                Repeat = '‚úÖ';
            }
            let Np_embed = new MessageEmbed()
                .setColor(setting.music.embed.color)
                .setThumbnail(player.queue.current.thumbnail)
                .addFields([
                    {
                        name: `üé∂ | ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏û‡∏•‡∏á`,
                        value: `> [${player.queue.current.title}](${player.queue.current.uri})`,
                        inline: false,
                    },
                    {
                        name: `üéß | ‡∏ä‡πà‡∏≠‡∏á‡∏ü‡∏±‡∏á‡πÄ‡∏û‡∏•‡∏á`,
                        value: `> <#${player.voiceChannel}>`,
                        inline: true,
                    },
                    {
                        name: `üì¢ | ‡∏Ç‡∏≠‡πÄ‡∏û‡∏•‡∏á‡πÇ‡∏î‡∏¢`,
                        value: `> <@${player.queue.current.requester}>`,
                        inline: true,
                    },
                    {
                        name: `‚è±Ô∏è | ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß`,
                        value: `> \`${await convertTime(player.queue.current.duration)}\``,
                        inline: true,
                    },
                    {
                        name: `üéô | ‡∏®‡∏¥‡∏•‡∏õ‡∏¥‡∏ô`,
                        value: `> \`${player.queue.current.author}\``,
                        inline: true,
                    },
                    {
                        name: `üåÄ | ‡∏Ñ‡∏¥‡∏ß`,
                        value: `> \`${player.queue.length}\``,
                        inline: true,
                    },
                    {
                        name: `üîÅ | ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏ß‡∏ô‡∏ã‡πâ‡∏≥`,
                        value: `> ${Repeat}`,
                        inline: true,
                    },
                    {
                        name: `üîä | ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡πÄ‡∏™‡∏µ‡∏¢‡∏á`,
                        value: `> \`${player.volume} %\``,
                        inline: true,
                    },
                ])
            .setFooter({text: setting.music.embed.footer})
            .setTimestamp()

            
            if(player.queue.current.uri.includes("youtube.com")){
                const info = await ytdl.getInfo(player.queue.current.identifier);
                const format = ytdl.chooseFormat(info.formats, { quality: 'highestaudio' });
                Np_embed.addField(`üì• | ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏û‡∏•‡∏á`, `> [\`‡∏Ñ‡∏•‡∏¥‡πä‡∏Å‡∏•‡∏¥‡πâ‡∏á‡∏ô‡∏µ‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏û‡∏•‡∏á\`](${format.url})`, true);
            }
            Np_embed.addField(`·≤º`, `\`${await convertTime(player.position)}\` ${(await progressbar(player.position, player.queue.current.duration, 18)).Bar} \`${await convertTime(player.queue.current.duration)}\``, false);
            
            await interaction.followUp({embeds: [ Np_embed ]});
        }
    },
});